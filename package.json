{
  "name": "portfolio-app",
  "scripts": {
    "start": "npm run local",
    "local": "cd app && MONGO_URL=mongodb://localhost:27017/portfolio meteor --settings .deploy/local.json --port 3000",
    "services": "cd services && MONGO_URL=mongodb://localhost:27017/portfolio meteor --settings .deploy/local.json --port 3002",
    "once": "cd once && MONGO_URL=mongodb://localhost:27017/portfolio meteor --settings .deploy/local.json --port 3003",
    "api": "cd api && MONGO_URL=mongodb://localhost:27017/portfolio meteor --settings .deploy/local.json --port 3004",
    "deploy-dev": "npm run deploy-dev-app & npm run deploy-dev-api & npm run deploy-dev-once & npm run deploy-dev-services",
    "restart-dev": "npm run restart-dev-app & npm run restart-dev-api & npm run restart-dev-once & npm run restart-dev-services",
    "deploy-dev-app": "cd assets && gulp build && cd ../app/.deploy/develop && mup deploy",
    "restart-dev-app": "cd app/.deploy/develop && mup reconfig",
    "deploy-dev-api": "cd assets && gulp build && cd ../api/.deploy/develop && mup deploy",
    "restart-dev-api": "cd api/.deploy/develop && mup reconfig",
    "deploy-dev-once": "cd once/.deploy/develop && mup deploy",
    "restart-dev-once": "cd once/.deploy/develop && mup reconfig",
    "deploy-dev-services": "cd services/.deploy/develop && mup deploy",
    "restart-dev-services": "cd services/.deploy/develop && mup reconfig",
    "deploy-staging": "npm run deploy-staging-app & npm run deploy-staging-api & npm run deploy-staging-once & npm run deploy-staging-services",
    "restart-staging": "npm run restart-staging-app & npm run restart-staging-api & npm run restart-staging-once & npm run restart-staging-services",
    "deploy-staging-app": "cd assets && gulp build && cd ../app/.deploy/staging && mup deploy",
    "restart-staging-app": "cd app/.deploy/staging && mup reconfig",
    "deploy-staging-api": "cd api/.deploy/staging && mup deploy",
    "restart-staging-api": "cd api/.deploy/staging && mup reconfig",
    "deploy-staging-once": "cd once/.deploy/staging && mup deploy",
    "restart-staging-once": "cd once/.deploy/staging && mup reconfig",
    "deploy-staging-services": "cd services/.deploy/staging && mup deploy",
    "restart-staging-services": "cd services/.deploy/staging && mup reconfig",
    "deploy": "npm run deploy-app & npm run deploy-api & npm run deploy-once & npm run deploy-services",
    "restart-production": "npm run restart-app & npm run restart-api & npm run restart-once & npm run restart-services",
    "deploy-app": "cd assets && gulp build && cd ../app/.deploy/production && mup deploy",
    "restart-app": "cd app/.deploy/production && mup reconfig",
    "deploy-api": "cd api/.deploy/production && mup deploy",
    "restart-api": "cd api/.deploy/production && mup reconfig",
    "deploy-once": "cd once/.deploy/production && mup deploy",
    "restart-once": "cd once/.deploy/production && mup reconfig",
    "deploy-services": "cd services/.deploy/production && mup deploy",
    "restart-services": "cd services/.deploy/production && mup reconfig"
  }
}
